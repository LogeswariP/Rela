import 'dart:async';
import 'package:flutter/material.dart';
import 'package:app/pages/table.dart';
import 'package:app/pages/session.dart';

void main() {
  runApp(Dept());
}

class Dept extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Page3',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  String dropdownValue = 'Department';
  var items = [
    'Department',
    'OP1',
    'OP2',
    'Endoscopy',
    'Ward/ICU',
    'Prof Clinic'
  ];
  late Timer _timer;
  late String currentTime;
  TextEditingController searchController1 = TextEditingController();
  TextEditingController searchController2 = TextEditingController();
  bool departmentSelected = false; // Track whether department is selected

  @override
  void initState() {
    super.initState();
    _timer = Timer.periodic(Duration(seconds: 1), (timer) {
      setState(() {
        currentTime = _getCurrentDateTime();
      });
    });
    currentTime = _getCurrentDateTime();
  }

  @override
  void dispose() {
    _timer.cancel();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.grey,
        leading: IconButton(
          icon: Icon(Icons.arrow_back),
          onPressed: () {
            Navigator.push(
              context,
              MaterialPageRoute(builder: (context) => ses()),
            );
          },
        ),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text("EmpId:"),
            Text(
              currentTime,
              style: TextStyle(fontSize: 20),
            ),
          ],
        ),
      ),
      body: Container(
        padding: EdgeInsets.all(20.0),
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Text(
                "Connect To Doctor",
                style: TextStyle(fontSize: 30),
              ),
              SizedBox(height: 20),
              DropdownButton<String>(
                value: dropdownValue,
                icon: Icon(Icons.keyboard_arrow_down),
                isExpanded: true,
                isDense: true,
                items: items.map((String item) {
                  return DropdownMenuItem<String>(
                    value: item,
                    child: Text(item),
                  );
                }).toList(),
                onChanged: (String? newValue) {
                  if (newValue != null) {
                    setState(() {
                      dropdownValue = newValue;
                      departmentSelected = newValue !=
                          'Department'; // Set departmentSelected based on dropdown value
                      if (newValue != 'Department') {
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => table()),
                        );
                      }
                    });
                  }
                },
              ),
              SizedBox(height: 20),
              Row(
                children: [
                  Text(
                    "Search Rota by date:",
                    style: TextStyle(fontSize: 16),
                  ),
                  SizedBox(width: 10),
                  Expanded(
                    child: InkWell(
                      onTap:
                          departmentSelected // Enable onTap only when department is selected
                              ? () {
                                  _selectDate(context, searchController1);
                                }
                              : null,
                      child: AbsorbPointer(
                        child: TextField(
                          controller: searchController1,
                          decoration: InputDecoration(
                            hintText: "Choose date",
                            border: OutlineInputBorder(),
                          ),
                        ),
                      ),
                    ),
                  ),
                ],
              ),
              SizedBox(height: 20),
              Row(
                children: [
                  Text(
                    "Search doctor by name:",
                    style: TextStyle(fontSize: 16),
                  ),
                  SizedBox(width: 10),
                  Expanded(
                    child: TextField(
                      controller: searchController2,
                      decoration: InputDecoration(
                        hintText: "Enter name",
                        border: OutlineInputBorder(),
                      ),
                    ),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  String _getCurrentDateTime() {
    DateTime now = DateTime.now();
    String formattedDateTime =
        "${_formatDateTimeComponent(now.hour)}:${_formatDateTimeComponent(now.minute)} - ${_formatDateTimeComponent(now.day)}/${_formatDateTimeComponent(now.month)}/${now.year}";
    return formattedDateTime;
  }

  String _formatDateTimeComponent(int component) {
    return component < 10 ? '0$component' : '$component';
  }

  _selectDate(BuildContext context, TextEditingController controller) async {
    DateTime? picked = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(2000),
      lastDate: DateTime(2100),
    );
    if (picked != null) {
      setState(() {
        controller.text = "${picked.day}/${picked.month}/${picked.year}";
      });
    }
  }
}
